<?php

/** 
 * This function defines the URL to the page created etc.
 * See http&#58;//api.drupal.org/api/function/hook_menu/6
 */
function informes_menu() {
  $items = array();
  $items['agenda_informativa'] = array(
    'title' => t('Agenda Informativa'),
    'page callback' => 'agenda_informativa',
    'access arguments' => array('access content'),
    'description' => t('Agenda Informativa'),
    'type' => MENU_CALLBACK,
  );
  $items['agenda_mediatica'] = array(
    'page callback' => 'agenda_mediatica',
    'access arguments' => array('access content'),
    'description' => t('Agenda Mediática'),
    'type' => MENU_CALLBACK,
  );
  $items['agenda/%'] = array(
    'page callback' => 'agenda',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'description' => t('Agendas'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

module_load_include('inc', 'informes', 'agenda_informativa');

function agenda($aiid){
  $agendas = entity_load('agenda_informativa', array($aiid));
  $agenda_informativa = $agendas[$aiid];
  drupal_set_title($agenda_informativa->nombre);
  $output = entity_view('agenda_informativa', array($agenda_informativa));

  return $output;
}

function agenda_informativa($preview = NULL) {
  drupal_add_js(drupal_get_path('module', 'informes') . '/js/agenda_informativa.js', array('weight' => 20));
  $hash = generateHash();
  if (is_null($preview)){
    $output = drupal_get_form('informes_agenda_informativa_form' .'_'. $hash, NULL, $hash);

  }
  else {
    $output = drupal_get_form('informes_agenda_informativa_preview_form' .'_'. $hash, 0, NULL, $hash);
  }
  return $output;


}



function informes_forms($form_id) {
  $forms = array();
  if (strpos($form_id, 'informes_agenda_informativa_form_') === 0) {
    $forms[$form_id] = array(
      'callback' => 'informes_agenda_informativa_form',
    );
  }
  if (strpos($form_id, 'informes_agenda_mediatica_form_') === 0) {
    $forms[$form_id] = array(
      'callback' => 'informes_agenda_mediatica_form',
    );
  }
  return $forms;
}

function informes_form_alter(&$form, $form_state, $form_id) {
    if (strpos($form_id, 'informes_agenda_informativa_form') === 0) {
        $form['#attributes'] = array('class' => 'agenda-informativa informes-form');
  }
    if (strpos($form_id, 'informes_agenda_mediatica_form') === 0) {
        $form['#attributes'] = array('class' => 'agenda-mediatica informes-form');
  }
  $form['#attached']['js'][] = drupal_get_path('module', 'informes') . '/js/disable_show_row_weights.js';
}



function informes_theme() {
  return array(
    'tabledrag_notas' => array(
      'render element' => 'element'
    ),
  );
}



//// entidades
/**
 * Implements hook_entity_info().
 */
function informes_entity_info() {

  $info = array();

  $info['agenda_informativa'] = array(
    'label' => t('Agenda Informativa'),
    'base table' => 'agenda_informativa',
    'entity keys' => array(
      'id' => 'aiid',
      'label' => 'nombre',
    ),
    'entity class' => 'AgendaInformativaEntity',
    'controller class' => 'AgendaInformativaEntityController',
    'access callback' => 'informes_access_callback',
    'uri callback' => 'entity_class_uri',
    'admin ui' => array(
      'path' => 'admin/structure/informes/agenda_informativa',
      'controller class' => 'EntityDefaultUIController',
    ),
    'fieldable' => TRUE,
    'bundles' => array(
      'agenda_informativa' => array(
        'label' => t('Agenda Informativa'),
        'admin' => array(
          'path' => 'admin/structure/informes/agenda_informativa',
        ),
      ),
    ),
    'module' => 'informes',
  );

  return $info;
}

/**
 * Extending the EntityAPIController for the Agenda Informativa entity.
 */
class AgendaInformativaEntityController extends EntityAPIController {
  
  public function buildContent($entity, $view_mode = 'full', $langcode = NULL, $content = array()) {

    $build = parent::buildContent($entity, $view_mode, $langcode, $content);
    
    
    return $build;
  
  }
  
}

/**
 * Agenda Informativa entity class extending the Entity class
 */
class AgendaInformativaEntity extends Entity {

  /**
   * Change the default URI from default/id to agenda/id
   */
  protected function defaultUri() {
    return array('path' => 'agenda/' . $this->identifier());
  }

}


/**
 * Access callback for Agenda Informativa entities.
 */
function informes_access_callback($op, $agenda_informativa = NULL, $account = NULL) {
  if ($op == 'view' || $op == 'update' || $op == 'create' || $op == 'delete') {
    return TRUE;
  }
  else {
    return FALSE;
  }
}

/**
 * Form definition for adding / editing a agenda_informativa.
 */
function agenda_informativa_form($form, &$form_state, $agenda_informativa = NULL) {

  $form['nombre'] = array(
    '#title' => t('Nombre de la agenda'),
    '#type' => 'textfield',
    '#default_value' => isset($agenda_informativa->nombre) ? $agenda_informativa->nombre : '',
    '#required' => TRUE,
  );
  field_attach_form('agenda_informativa', $agenda_informativa, $form, $form_state);
  $form['submit'] = array(
    '#type' => 'submit', 
    '#value' => isset($agenda_informativa->id) ? t('Update agenda_informativa') : t('Guarda agenda informativa'),
    '#weight' => 50,
  );

  return $form;
}

/**
 * Submit handler for the agenda_informativa add/edit form.
 */
function agenda_informativa_form_submit($form, &$form_state) {
  $agenda_informativa = entity_ui_form_submit_build_entity($form, $form_state);
  $agenda_informativa->save();
  drupal_set_message(t('La agenda informativa: @name ha sido guardada.', array('@name' => $agenda_informativa->name)));
  $form_state['redirect'] = 'admin/structure/informes/agenda_informativa';
}
?>